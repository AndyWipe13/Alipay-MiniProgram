"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var store_1 = require("./store");
Component({
    props: {
        onValuesChange: function onValuesChange(changedValues, totalValues) {
            return {
                changedValues: changedValues,
                totalValues: totalValues,
            };
        },
        onFinish: function onFinish(totalValues) {
            return totalValues;
        },
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        onFinishFailed: function onFinishFailed() { },
        className: '',
        form: 'default',
        requiredMarkStyle: 'asterisk',
        position: 'horizontal',
        initialValues: {},
    },
    onInit: function () {
        var _a = this.props, form = _a.form, initialValues = _a.initialValues, onValuesChange = _a.onValuesChange, onFinish = _a.onFinish;
        if (!form) {
            throw new Error('no form name');
        } // setup initval
        store_1.store.init(form, initialValues, onValuesChange, onFinish);
    },
    didUnmount: function didUnmount() {
        store_1.store.tear(this.props.form);
    },
    ref: function () {
        var _this = this;
        return {
            getCompInstance: function () { return _this; },
            setFieldsValue: function (form, value) { return store_1.store.setFieldsValue(form, value); },
        };
    },
});